# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import realtime_rec.protobuf.nearline_engine_pb2 as nearline__engine__pb2


class NearlineEngineStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OLAPRequest = channel.unary_unary(
                '/nearline_engine.NearlineEngine/OLAPRequest',
                request_serializer=nearline__engine__pb2.OLAPRequestInfo.SerializeToString,
                response_deserializer=nearline__engine__pb2.Response.FromString,
                )
        self.TextEmbeddingRequest = channel.unary_unary(
                '/nearline_engine.NearlineEngine/TextEmbeddingRequest',
                request_serializer=nearline__engine__pb2.TextEmbeddingRequestInfo.SerializeToString,
                response_deserializer=nearline__engine__pb2.Response.FromString,
                )


class NearlineEngineServicer(object):
    """Missing associated documentation comment in .proto file."""

    def OLAPRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TextEmbeddingRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NearlineEngineServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OLAPRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.OLAPRequest,
                    request_deserializer=nearline__engine__pb2.OLAPRequestInfo.FromString,
                    response_serializer=nearline__engine__pb2.Response.SerializeToString,
            ),
            'TextEmbeddingRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.TextEmbeddingRequest,
                    request_deserializer=nearline__engine__pb2.TextEmbeddingRequestInfo.FromString,
                    response_serializer=nearline__engine__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'nearline_engine.NearlineEngine', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class NearlineEngine(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def OLAPRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nearline_engine.NearlineEngine/OLAPRequest',
            nearline__engine__pb2.OLAPRequestInfo.SerializeToString,
            nearline__engine__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TextEmbeddingRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nearline_engine.NearlineEngine/TextEmbeddingRequest',
            nearline__engine__pb2.TextEmbeddingRequestInfo.SerializeToString,
            nearline__engine__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
